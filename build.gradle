import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'idea'
    id 'checkstyle'
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

sourceSets {
    main {
        java {
            exclude '**/api/**'
        }
    }
}

def runeLiteVersion = 'latest.release'
def krakenApiVersion = '1.0.107'

group = 'com.krakenplugins'
version = '1.0.0'

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.runelite.net'
    }
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation group: 'com.github.cbartram', name:'kraken-api', version: krakenApiVersion
    implementation group: 'com.github.cbartram', name:'shortest-path', version: '1.0.2'
    implementation group: 'com.google.inject.extensions', name: 'guice-multibindings', version: '4.1.0', {
        exclude group: 'com.google.inject'
    }
    compileOnly group: 'net.runelite', name:'client', version: runeLiteVersion
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'junit:junit:4.12'
    testImplementation group: 'net.runelite', name:'client', version: runeLiteVersion
    testImplementation group: 'net.runelite', name:'jshell', version: runeLiteVersion
}

test {
    useJUnitPlatform()
}

tasks.named('processResources') {
    exclude 'META-INF/services/com.krakenplugins.ghostloader.IManagedPlugin'
}

tasks.named('shadowJar', ShadowJar) {
    mergeServiceFiles()
    archiveFileName.set("${project.name}-${project.version}.jar")
}
